# pages/1_üí∏_ThanhToan_TB.py
from __future__ import annotations
from pathlib import Path
import sys
import io
import tempfile
from typing import Any, List, Dict

import streamlit as st
import pandas as pd

# === ƒê∆∞a project root v√†o sys.path ƒë·ªÉ import "modules/..." ===
ROOT = Path(__file__).resolve().parents[1]
if str(ROOT) not in sys.path:
    sys.path.insert(0, str(ROOT))

# Import 2 h√†m run b·∫°n ƒë√£ c√≥
from modules.thanh_toan_tb.TH_TRA_THUONG import run as merge_run      # h·ª£p nh·∫•t nhi·ªÅu file DMS
from modules.thanh_toan_tb.main_TT_tra_thuong import run as main_run  # t√≠nh tr·∫£ th∆∞·ªüng

st.set_page_config(page_title="üí∏ Thanh to√°n tr·∫£ th∆∞·ªüng tr∆∞ng b√†y", layout="wide")
st.title("üí∏ Thanh to√°n tr·∫£ th∆∞·ªüng tr∆∞ng b√†y")
st.caption("Kh√¥ng l∆∞u file v√†o repo ‚Äî x·ª≠ l√Ω trong th∆∞ m·ª•c t·∫°m & tr·∫£ k·∫øt qu·∫£ v·ªÅ cho ng∆∞·ªùi d√πng.")

# ------------------------------------------------------------
# Helper
# ------------------------------------------------------------
def _bytes_to_excel_preview(xlsx_bytes: bytes, n_rows: int = 100) -> None:
    """Hi·ªÉn th·ªã preview sheet ƒë·∫ßu ti√™n n·∫øu ƒë·ªçc ƒë∆∞·ª£c."""
    try:
        xls = pd.ExcelFile(io.BytesIO(xlsx_bytes))
        first_sheet = xls.sheet_names[0]
        df_head = pd.read_excel(xls, sheet_name=first_sheet).head(n_rows)
        st.caption(f"Xem nhanh **{first_sheet}** ({len(df_head)} d√≤ng ƒë·∫ßu)")
        st.dataframe(df_head, use_container_width=True)
    except Exception:
        pass

def run_merge_in_memory(files: List[Any]) -> bytes:
    """
    Ghi c√°c UploadedFile v√†o th∆∞ m·ª•c t·∫°m (ch·ªâ t·ªìn t·∫°i trong runtime),
    g·ªçi merge_run(input_dir=..., output_path=...), r·ªìi tr·∫£ v·ªÅ bytes c·ªßa file k·∫øt qu·∫£.
    """
    with tempfile.TemporaryDirectory() as tmpdir:
        tmpdir_p = Path(tmpdir)
        for f in files:
            # reset v·ªÅ ƒë·∫ßu r·ªìi ghi ra file t·∫°m
            f.seek(0)
            (tmpdir_p / f.name).write_bytes(f.read())
        out_path = tmpdir_p / "output-tra-thuong.xlsx"
        # CH√ö √ù: gi·ªØ ƒë√∫ng t√™n tham s·ªë nh∆∞ h√†m c·ªßa b·∫°n ƒëang d√πng
        merge_run(input_dir=tmpdir_p, output_path=out_path)
        return out_path.read_bytes()

def run_main_in_memory(file_bytes: bytes) -> Dict[str, bytes]:
    """
    G·ªçi main_run(input_file=..., output_file=..., alert_file=...) trong th∆∞ m·ª•c t·∫°m,
    r·ªìi tr·∫£ v·ªÅ dict t√™n file -> bytes.
    """
    with tempfile.TemporaryDirectory() as tmpdir:
        tmpdir_p = Path(tmpdir)
        in_path = tmpdir_p / "input.xlsx"
        out_path = tmpdir_p / "output.xlsx"
        alert_path = tmpdir_p / "alert.xlsx"

        in_path.write_bytes(file_bytes)
        main_run(input_file=in_path, output_file=out_path, alert_file=alert_path)

        result: Dict[str, bytes] = {}
        if out_path.exists():
            result["output.xlsx"] = out_path.read_bytes()
        if alert_path.exists():
            result["alert.xlsx"] = alert_path.read_bytes()
        return result

# ------------------------------------------------------------
# 1) H·ª¢P NH·∫§T FILE T·ª™ HT DMS (tu·ª≥ ch·ªçn)
# ------------------------------------------------------------
st.header("1) H·ª£p nh·∫•t file t·ª´ HT DMS (tu·ª≥ ch·ªçn)")
st.write("T·∫£i **nhi·ªÅu file** DMS (.xls/.xlsx) ƒë·ªÉ h·ª£p nh·∫•t ‚Üí xu·∫•t 1 t·ªáp `output-tra-thuong.xlsx`.")

with st.form("merge_form", clear_on_submit=False):
    uploaded_many = st.file_uploader(
        "Ch·ªçn nhi·ªÅu file DMS",
        type=["xlsx", "xls"],
        accept_multiple_files=True,
        key="merge_files"
    )
    do_merge = st.form_submit_button("üìÇ H·ª£p nh·∫•t d·ªØ li·ªáu (kh√¥ng l∆∞u ra ƒëƒ©a)")

if do_merge:
    if not uploaded_many:
        st.warning("Ch∆∞a ch·ªçn file n√†o.")
    else:
        with st.spinner("ƒêang h·ª£p nh·∫•t..."):
            try:
                merged_bytes = run_merge_in_memory(uploaded_many)
                st.success("‚úÖ ƒê√£ h·ª£p nh·∫•t xong! T·∫£i t·ªáp k·∫øt qu·∫£ b√™n d∆∞·ªõi.")
                _bytes_to_excel_preview(merged_bytes, n_rows=100)
                st.download_button(
                    "‚¨áÔ∏è T·∫£i file h·ª£p nh·∫•t (output-tra-thuong.xlsx)",
                    data=merged_bytes,
                    file_name="output-tra-thuong.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    use_container_width=True,
                    key="dl_merge"
                )
            except Exception as e:
                st.error(f"‚ùå L·ªói khi h·ª£p nh·∫•t: {e}")

st.divider()

# ------------------------------------------------------------
# 2) CH·∫†Y T√çNH TR·∫¢ TH∆Ø·ªûNG (ƒë·∫ßu v√†o 1 file)
# ------------------------------------------------------------
st.header("2) Ch·∫°y t√≠nh tr·∫£ th∆∞·ªüng (main)")
st.write("Ch·ªçn 1 file ƒë·∫ßu v√†o c√≥ sheet ph√π h·ª£p (v√≠ d·ª• `output-tra-thuong.xlsx`).")

with st.form("main_form", clear_on_submit=False):
    one_file = st.file_uploader(
        "Ch·ªçn 1 file ƒë·∫ßu v√†o (.xls/.xlsx)",
        type=["xlsx", "xls"],
        accept_multiple_files=False,
        key="main_file"
    )
    do_main = st.form_submit_button("‚ñ∂Ô∏è T√≠nh th∆∞·ªüng (kh√¥ng l∆∞u ra ƒëƒ©a)")

if do_main:
    if not one_file:
        st.warning("Ch∆∞a ch·ªçn file ƒë·∫ßu v√†o.")
    else:
        with st.spinner("ƒêang t√≠nh th∆∞·ªüng..."):
            try:
                one_file.seek(0)
                results = run_main_in_memory(one_file.read())
                if not results:
                    st.warning("Kh√¥ng t·∫°o ƒë∆∞·ª£c output n√†o (output.xlsx/alert.xlsx).")
                else:
                    st.success("‚úÖ X·ª≠ l√Ω xong! T·∫£i file b√™n d∆∞·ªõi.")
                    # Preview output n·∫øu c√≥
                    if "output.xlsx" in results:
                        _bytes_to_excel_preview(results["output.xlsx"], n_rows=100)
                    # N√∫t t·∫£i
                    for name, bts in results.items():
                        st.download_button(
                            f"‚¨áÔ∏è T·∫£i {name}",
                            data=bts,
                            file_name=name,
                            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                            key=f"dl_{name}"
                        )
            except Exception as e:
                st.error(f"‚ùå L·ªói khi t√≠nh th∆∞·ªüng: {e}")

# G·ª£i √Ω nh·ªè
with st.expander("‚öôÔ∏è L∆∞u √Ω & kh·∫Øc ph·ª•c s·ª± c·ªë"):
    st.markdown("""
- N·∫øu file DMS c·ªßa b·∫°n l√† **.xls (97-2003)**, ƒë·∫£m b·∫£o `requirements.txt` c√≥ `xlrd==2.0.1`.
- H√£y ki·ªÉm tra l·∫°i c√°c sheet/ƒë·ªãnh d·∫°ng ƒë·∫ßu v√†o kh·ªõp v·ªõi y√™u c·∫ßu trong `modules/thanh_toan_tb/*`.
- App **kh√¥ng ghi** v√†o `data/raw` hay repo; m·ªçi I/O ƒë·ªÅu ·ªü th∆∞ m·ª•c t·∫°m.
    """)
